export interface DocLink {
  id: string;
  title: string;
  description: string;
  url: string;
  category:
    | "introduction"
    | "runes"
    | "template"
    | "styling"
    | "special"
    | "runtime"
    | "misc"
    | "reference"
    | "sveltekit"
    | "tutorial";
  keywords?: string[];
}

export const svelteDocsLinks: DocLink[] = [
  // ===== INTRODUCTION =====
  {
    id: "overview",
    title: "Overview",
    description: "What is Svelte and how it works",
    url: "https://svelte.dev/docs/svelte/overview",
    category: "introduction",
    keywords: ["intro", "getting started", "basics", "compiler"],
  },
  {
    id: "getting-started",
    title: "Getting Started",
    description: "Set up your first Svelte project",
    url: "https://svelte.dev/docs/svelte/getting-started",
    category: "introduction",
    keywords: ["setup", "install", "create", "new project"],
  },
  {
    id: "svelte-files",
    title: ".svelte Files",
    description: "Understanding Svelte component files",
    url: "https://svelte.dev/docs/svelte/svelte-files",
    category: "introduction",
    keywords: ["components", "file structure", ".svelte"],
  },
  {
    id: "svelte-js-files",
    title: ".svelte.js and .svelte.ts Files",
    description: "Reactive JavaScript and TypeScript modules",
    url: "https://svelte.dev/docs/svelte/svelte-js-files",
    category: "introduction",
    keywords: ["modules", "typescript", "javascript", "reactive"],
  },

  // ===== RUNES =====
  {
    id: "what-are-runes",
    title: "What are Runes?",
    description: "Introduction to Svelte 5 runes",
    url: "https://svelte.dev/docs/svelte/what-are-runes",
    category: "runes",
    keywords: ["runes", "svelte 5", "reactivity", "signals"],
  },
  {
    id: "state-rune",
    title: "$state",
    description: "Declare reactive state",
    url: "https://svelte.dev/docs/svelte/$state",
    category: "runes",
    keywords: ["state", "reactive", "rune", "$state"],
  },
  {
    id: "derived-rune",
    title: "$derived",
    description: "Compute derived values",
    url: "https://svelte.dev/docs/svelte/$derived",
    category: "runes",
    keywords: ["derived", "computed", "rune", "$derived"],
  },
  {
    id: "effect-rune",
    title: "$effect",
    description: "Run side effects",
    url: "https://svelte.dev/docs/svelte/$effect",
    category: "runes",
    keywords: ["effect", "side effects", "rune", "$effect"],
  },
  {
    id: "props-rune",
    title: "$props",
    description: "Declare component props",
    url: "https://svelte.dev/docs/svelte/$props",
    category: "runes",
    keywords: ["props", "properties", "rune", "$props"],
  },
  {
    id: "bindable-rune",
    title: "$bindable",
    description: "Create bindable props",
    url: "https://svelte.dev/docs/svelte/$bindable",
    category: "runes",
    keywords: ["bindable", "two-way binding", "rune", "$bindable"],
  },
  {
    id: "inspect-rune",
    title: "$inspect",
    description: "Debug reactive state",
    url: "https://svelte.dev/docs/svelte/$inspect",
    category: "runes",
    keywords: ["inspect", "debug", "rune", "$inspect"],
  },
  {
    id: "host-rune",
    title: "$host",
    description: "Access the host element",
    url: "https://svelte.dev/docs/svelte/$host",
    category: "runes",
    keywords: ["host", "element", "rune", "$host"],
  },

  // ===== TEMPLATE SYNTAX =====
  {
    id: "basic-markup",
    title: "Basic Markup",
    description: "HTML in Svelte components",
    url: "https://svelte.dev/docs/svelte/basic-markup",
    category: "template",
    keywords: ["html", "markup", "template", "tags"],
  },
  {
    id: "if-block",
    title: "{#if ...}",
    description: "Conditional rendering",
    url: "https://svelte.dev/docs/svelte/if",
    category: "template",
    keywords: ["if", "conditional", "else", "control flow"],
  },
  {
    id: "each-block",
    title: "{#each ...}",
    description: "Iterate over lists",
    url: "https://svelte.dev/docs/svelte/each",
    category: "template",
    keywords: ["each", "loop", "iteration", "list"],
  },
  {
    id: "key-block",
    title: "{#key ...}",
    description: "Force re-creation of elements",
    url: "https://svelte.dev/docs/svelte/key",
    category: "template",
    keywords: ["key", "re-render", "force update"],
  },
  {
    id: "await-block",
    title: "{#await ...}",
    description: "Handle promises in templates",
    url: "https://svelte.dev/docs/svelte/await",
    category: "template",
    keywords: ["await", "promise", "async", "loading"],
  },
  {
    id: "snippet",
    title: "{#snippet ...}",
    description: "Reusable template fragments",
    url: "https://svelte.dev/docs/svelte/snippet",
    category: "template",
    keywords: ["snippet", "fragment", "reusable", "template"],
  },
  {
    id: "render",
    title: "{@render ...}",
    description: "Render snippets",
    url: "https://svelte.dev/docs/svelte/@render",
    category: "template",
    keywords: ["render", "snippet", "template"],
  },
  {
    id: "html",
    title: "{@html ...}",
    description: "Render raw HTML",
    url: "https://svelte.dev/docs/svelte/@html",
    category: "template",
    keywords: ["html", "raw", "innerHTML", "dangerous"],
  },
  {
    id: "attach",
    title: "{@attach ...}",
    description: "Attach custom elements",
    url: "https://svelte.dev/docs/svelte/@attach",
    category: "template",
    keywords: ["attach", "custom elements", "web components"],
  },
  {
    id: "const",
    title: "{@const ...}",
    description: "Define local constants",
    url: "https://svelte.dev/docs/svelte/@const",
    category: "template",
    keywords: ["const", "local", "variable"],
  },
  {
    id: "debug",
    title: "{@debug ...}",
    description: "Debug values in templates",
    url: "https://svelte.dev/docs/svelte/@debug",
    category: "template",
    keywords: ["debug", "console", "inspect"],
  },
  {
    id: "bind",
    title: "bind:",
    description: "Two-way data binding",
    url: "https://svelte.dev/docs/svelte/bind",
    category: "template",
    keywords: ["bind", "binding", "two-way", "input"],
  },
  {
    id: "use",
    title: "use:",
    description: "Element actions",
    url: "https://svelte.dev/docs/svelte/use",
    category: "template",
    keywords: ["use", "action", "directive", "element"],
  },
  {
    id: "transition",
    title: "transition:",
    description: "Element transitions",
    url: "https://svelte.dev/docs/svelte/transition",
    category: "template",
    keywords: ["transition", "animation", "fade", "slide"],
  },
  {
    id: "in-and-out",
    title: "in: and out:",
    description: "Separate intro and outro transitions",
    url: "https://svelte.dev/docs/svelte/in-and-out",
    category: "template",
    keywords: ["in", "out", "intro", "outro", "transition"],
  },
  {
    id: "animate",
    title: "animate:",
    description: "Animate element positions",
    url: "https://svelte.dev/docs/svelte/animate",
    category: "template",
    keywords: ["animate", "flip", "motion"],
  },
  {
    id: "style",
    title: "style:",
    description: "Dynamic inline styles",
    url: "https://svelte.dev/docs/svelte/style",
    category: "template",
    keywords: ["style", "css", "inline", "dynamic"],
  },
  {
    id: "class",
    title: "class:",
    description: "Conditional CSS classes",
    url: "https://svelte.dev/docs/svelte/class",
    category: "template",
    keywords: ["class", "css", "conditional", "toggle"],
  },
  {
    id: "await-expressions",
    title: "await",
    description: "Await expressions in templates",
    url: "https://svelte.dev/docs/svelte/await-expressions",
    category: "template",
    keywords: ["await", "async", "promise"],
  },

  // ===== STYLING =====
  {
    id: "scoped-styles",
    title: "Scoped Styles",
    description: "Component-scoped CSS",
    url: "https://svelte.dev/docs/svelte/scoped-styles",
    category: "styling",
    keywords: ["css", "scoped", "styles", "component"],
  },
  {
    id: "global-styles",
    title: "Global Styles",
    description: "Global CSS in components",
    url: "https://svelte.dev/docs/svelte/global-styles",
    category: "styling",
    keywords: ["css", "global", ":global", "styles"],
  },
  {
    id: "custom-properties",
    title: "Custom Properties",
    description: "CSS custom properties (variables)",
    url: "https://svelte.dev/docs/svelte/custom-properties",
    category: "styling",
    keywords: ["css", "variables", "custom properties", "--"],
  },
  {
    id: "nested-style-elements",
    title: "Nested <style> Elements",
    description: "Multiple style tags in components",
    url: "https://svelte.dev/docs/svelte/nested-style-elements",
    category: "styling",
    keywords: ["style", "nested", "multiple", "css"],
  },

  // ===== SPECIAL ELEMENTS =====
  {
    id: "svelte-boundary",
    title: "<svelte:boundary>",
    description: "Error boundaries for components",
    url: "https://svelte.dev/docs/svelte/svelte-boundary",
    category: "special",
    keywords: ["boundary", "error", "catch", "fallback"],
  },
  {
    id: "svelte-window",
    title: "<svelte:window>",
    description: "Window event listeners and bindings",
    url: "https://svelte.dev/docs/svelte/svelte-window",
    category: "special",
    keywords: ["window", "events", "scroll", "resize"],
  },
  {
    id: "svelte-document",
    title: "<svelte:document>",
    description: "Document event listeners",
    url: "https://svelte.dev/docs/svelte/svelte-document",
    category: "special",
    keywords: ["document", "events", "global"],
  },
  {
    id: "svelte-body",
    title: "<svelte:body>",
    description: "Body event listeners",
    url: "https://svelte.dev/docs/svelte/svelte-body",
    category: "special",
    keywords: ["body", "events"],
  },
  {
    id: "svelte-head",
    title: "<svelte:head>",
    description: "Add elements to document head",
    url: "https://svelte.dev/docs/svelte/svelte-head",
    category: "special",
    keywords: ["head", "meta", "title", "seo"],
  },
  {
    id: "svelte-element",
    title: "<svelte:element>",
    description: "Dynamic element tags",
    url: "https://svelte.dev/docs/svelte/svelte-element",
    category: "special",
    keywords: ["element", "dynamic", "tag"],
  },
  {
    id: "svelte-options",
    title: "<svelte:options>",
    description: "Component compiler options",
    url: "https://svelte.dev/docs/svelte/svelte-options",
    category: "special",
    keywords: ["options", "compiler", "immutable", "accessors"],
  },

  // ===== RUNTIME =====
  {
    id: "stores",
    title: "Stores",
    description: "Reactive stores for state management",
    url: "https://svelte.dev/docs/svelte/stores",
    category: "runtime",
    keywords: ["stores", "writable", "readable", "derived", "state"],
  },
  {
    id: "context",
    title: "Context",
    description: "Share data between components",
    url: "https://svelte.dev/docs/svelte/context",
    category: "runtime",
    keywords: ["context", "setContext", "getContext", "share"],
  },
  {
    id: "lifecycle-hooks",
    title: "Lifecycle Hooks",
    description: "Component lifecycle functions",
    url: "https://svelte.dev/docs/svelte/lifecycle-hooks",
    category: "runtime",
    keywords: ["lifecycle", "onMount", "onDestroy", "beforeUpdate", "afterUpdate"],
  },
  {
    id: "imperative-component-api",
    title: "Imperative Component API",
    description: "Programmatically control components",
    url: "https://svelte.dev/docs/svelte/imperative-component-api",
    category: "runtime",
    keywords: ["api", "mount", "unmount", "$set", "$on"],
  },

  // ===== MISC =====
  {
    id: "testing",
    title: "Testing",
    description: "Testing Svelte components",
    url: "https://svelte.dev/docs/svelte/testing",
    category: "misc",
    keywords: ["testing", "vitest", "jest", "unit tests"],
  },
  {
    id: "typescript",
    title: "TypeScript",
    description: "Using TypeScript with Svelte",
    url: "https://svelte.dev/docs/svelte/typescript",
    category: "misc",
    keywords: ["typescript", "ts", "types", "lang"],
  },
  {
    id: "custom-elements",
    title: "Custom Elements",
    description: "Compile to web components",
    url: "https://svelte.dev/docs/svelte/custom-elements",
    category: "misc",
    keywords: ["custom elements", "web components", "shadow dom"],
  },
  {
    id: "v4-migration",
    title: "Svelte 4 Migration Guide",
    description: "Migrate from Svelte 3 to 4",
    url: "https://svelte.dev/docs/svelte/v4-migration-guide",
    category: "misc",
    keywords: ["migration", "upgrade", "svelte 4", "v4"],
  },
  {
    id: "v5-migration",
    title: "Svelte 5 Migration Guide",
    description: "Migrate from Svelte 4 to 5",
    url: "https://svelte.dev/docs/svelte/v5-migration-guide",
    category: "misc",
    keywords: ["migration", "upgrade", "svelte 5", "v5", "runes"],
  },
  {
    id: "faq",
    title: "Frequently Asked Questions",
    description: "Common questions about Svelte",
    url: "https://svelte.dev/docs/svelte/faq",
    category: "misc",
    keywords: ["faq", "questions", "help", "common"],
  },

  // ===== REFERENCE =====
  {
    id: "svelte-package",
    title: "svelte",
    description: "Core Svelte package API",
    url: "https://svelte.dev/docs/svelte/svelte",
    category: "reference",
    keywords: ["api", "package", "core", "svelte"],
  },
  {
    id: "svelte-action",
    title: "svelte/action",
    description: "Action type definitions",
    url: "https://svelte.dev/docs/svelte/svelte-action",
    category: "reference",
    keywords: ["action", "types", "api"],
  },
  {
    id: "svelte-animate",
    title: "svelte/animate",
    description: "Animation functions",
    url: "https://svelte.dev/docs/svelte/svelte-animate",
    category: "reference",
    keywords: ["animate", "flip", "animation"],
  },
  {
    id: "svelte-attachments",
    title: "svelte/attachments",
    description: "Custom element attachments",
    url: "https://svelte.dev/docs/svelte/svelte-attachments",
    category: "reference",
    keywords: ["attachments", "custom elements"],
  },
  {
    id: "svelte-compiler",
    title: "svelte/compiler",
    description: "Compiler API",
    url: "https://svelte.dev/docs/svelte/svelte-compiler",
    category: "reference",
    keywords: ["compiler", "compile", "preprocess", "api"],
  },
  {
    id: "svelte-easing",
    title: "svelte/easing",
    description: "Easing functions for animations",
    url: "https://svelte.dev/docs/svelte/svelte-easing",
    category: "reference",
    keywords: ["easing", "animation", "transition", "cubic"],
  },
  {
    id: "svelte-events",
    title: "svelte/events",
    description: "Event type definitions",
    url: "https://svelte.dev/docs/svelte/svelte-events",
    category: "reference",
    keywords: ["events", "types", "handlers"],
  },
  {
    id: "svelte-legacy",
    title: "svelte/legacy",
    description: "Legacy API compatibility",
    url: "https://svelte.dev/docs/svelte/svelte-legacy",
    category: "reference",
    keywords: ["legacy", "compatibility", "old"],
  },
  {
    id: "svelte-motion",
    title: "svelte/motion",
    description: "Tweened and spring stores",
    url: "https://svelte.dev/docs/svelte/svelte-motion",
    category: "reference",
    keywords: ["motion", "tweened", "spring", "animation"],
  },
  {
    id: "svelte-reactivity-window",
    title: "svelte/reactivity/window",
    description: "Window reactive utilities",
    url: "https://svelte.dev/docs/svelte/svelte-reactivity-window",
    category: "reference",
    keywords: ["reactivity", "window", "utilities"],
  },
  {
    id: "svelte-reactivity",
    title: "svelte/reactivity",
    description: "Reactivity utilities",
    url: "https://svelte.dev/docs/svelte/svelte-reactivity",
    category: "reference",
    keywords: ["reactivity", "utilities", "reactive"],
  },
  {
    id: "svelte-server",
    title: "svelte/server",
    description: "Server-side rendering API",
    url: "https://svelte.dev/docs/svelte/svelte-server",
    category: "reference",
    keywords: ["server", "ssr", "render"],
  },
  {
    id: "svelte-store",
    title: "svelte/store",
    description: "Store utilities and types",
    url: "https://svelte.dev/docs/svelte/svelte-store",
    category: "reference",
    keywords: ["store", "writable", "readable", "derived"],
  },
  {
    id: "svelte-transition",
    title: "svelte/transition",
    description: "Built-in transition functions",
    url: "https://svelte.dev/docs/svelte/svelte-transition",
    category: "reference",
    keywords: ["transition", "fade", "slide", "fly", "scale"],
  },
  {
    id: "compiler-errors",
    title: "Compiler Errors",
    description: "Svelte compiler error reference",
    url: "https://svelte.dev/docs/svelte/compiler-errors",
    category: "reference",
    keywords: ["errors", "compiler", "troubleshooting"],
  },
  {
    id: "compiler-warnings",
    title: "Compiler Warnings",
    description: "Svelte compiler warning reference",
    url: "https://svelte.dev/docs/svelte/compiler-warnings",
    category: "reference",
    keywords: ["warnings", "compiler", "best practices"],
  },
  {
    id: "runtime-errors",
    title: "Runtime Errors",
    description: "Svelte runtime error reference",
    url: "https://svelte.dev/docs/svelte/runtime-errors",
    category: "reference",
    keywords: ["errors", "runtime", "troubleshooting"],
  },
  {
    id: "runtime-warnings",
    title: "Runtime Warnings",
    description: "Svelte runtime warning reference",
    url: "https://svelte.dev/docs/svelte/runtime-warnings",
    category: "reference",
    keywords: ["warnings", "runtime", "best practices"],
  },

  // ===== SVELTEKIT =====
  {
    id: "sveltekit-intro",
    title: "SvelteKit Introduction",
    description: "Build full-stack web applications",
    url: "https://svelte.dev/docs/kit/introduction",
    category: "sveltekit",
    keywords: ["kit", "framework", "full-stack", "ssr"],
  },
  {
    id: "sveltekit-routing",
    title: "Routing",
    description: "File-based routing system",
    url: "https://svelte.dev/docs/kit/routing",
    category: "sveltekit",
    keywords: ["routes", "pages", "layouts", "routing"],
  },
  {
    id: "sveltekit-load",
    title: "Loading Data",
    description: "Load data for your pages",
    url: "https://svelte.dev/docs/kit/load",
    category: "sveltekit",
    keywords: ["load", "data", "server", "universal"],
  },
  {
    id: "sveltekit-form-actions",
    title: "Form Actions",
    description: "Handle form submissions",
    url: "https://svelte.dev/docs/kit/form-actions",
    category: "sveltekit",
    keywords: ["forms", "actions", "POST", "progressive enhancement"],
  },
  {
    id: "sveltekit-hooks",
    title: "Hooks",
    description: "Intercept and modify requests",
    url: "https://svelte.dev/docs/kit/hooks",
    category: "sveltekit",
    keywords: ["hooks", "handle", "server", "middleware"],
  },
  {
    id: "sveltekit-adapters",
    title: "Adapters",
    description: "Deploy to different platforms",
    url: "https://svelte.dev/docs/kit/adapters",
    category: "sveltekit",
    keywords: ["deploy", "vercel", "netlify", "cloudflare", "node"],
  },

  // ===== TUTORIAL & RESOURCES =====
  {
    id: "tutorial-interactive",
    title: "Interactive Tutorial",
    description: "Learn Svelte step-by-step",
    url: "https://learn.svelte.dev/",
    category: "tutorial",
    keywords: ["learn", "tutorial", "interactive", "exercises"],
  },
  {
    id: "examples",
    title: "Examples",
    description: "Svelte example projects",
    url: "https://svelte.dev/examples/hello-world",
    category: "tutorial",
    keywords: ["examples", "demos", "templates"],
  },
  {
    id: "svelte-blog",
    title: "Svelte Blog",
    description: "Latest news and updates",
    url: "https://svelte.dev/blog",
    category: "tutorial",
    keywords: ["news", "blog", "updates"],
  },
  {
    id: "svelte-repl",
    title: "Svelte REPL",
    description: "Try Svelte online",
    url: "https://svelte.dev/repl",
    category: "tutorial",
    keywords: ["playground", "repl", "try", "online"],
  },
];
